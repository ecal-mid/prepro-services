# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import protos.bytes2bytes_pb2 as bytes2bytes__pb2


class Bytes2BytesStub(object):
    """The service definition.
  """

    def __init__(self, channel):
        """Constructor.

    Args:
      channel: A grpc.Channel.
    """
        self.Run = channel.unary_unary(
            '/Bytes2Bytes/Run',
            request_serializer=
            bytes2bytes__pb2.Bytes2BytesRequest.SerializeToString,
            response_deserializer=bytes2bytes__pb2.Bytes2BytesReply.FromString,)


class Bytes2BytesServicer(object):
    """The service definition.
  """

    def Run(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Bytes2BytesServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Run':
        grpc.unary_unary_rpc_method_handler(
            servicer.Run,
            request_deserializer=bytes2bytes__pb2.Bytes2BytesRequest.FromString,
            response_serializer=
            bytes2bytes__pb2.Bytes2BytesReply.SerializeToString,),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'Bytes2Bytes', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
